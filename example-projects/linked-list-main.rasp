// Little program for playing with a linked list

(var COMMAND_ADD "add")
(var COMMAND_REMOVE "remove")
(var COMMAND_PRINT "print")
(var COMMAND_HELP "help")
(var COMMAND_EXIT "exit")

(var list (new_linked_list))

(defun help_command ()
  (println "Commands are " COMMAND_ADD ", " COMMAND_REMOVE ", " COMMAND_PRINT ", " COMMAND_HELP ", " COMMAND_EXIT))

(defun add_element_command ()
  (print "Enter value to add: ")
	(var input (read_line))
	(set list (push_linked_list list input)))

(defun remove_element_command ()
  (print "Enter index to remove: ")
	(var input (read_line))
	(var index (try_convert_string_to_int input))
	(if index
	  (set list (linked_list_remove list index))
	  else
	  (println "Not a number: " input)))

(defun print_command ()
	(var length (length_linked_list list))
	(println "List has " length " " (if (== length 1) "element" else "elements"))
	(var i 0)
	(while (< i length)
		(var element (get_linked_list list i))
		(println i ": " element)
		(set i (+ i 1))))


(help_command)
(var looping true)
(while looping
	(print "Enter command: ")
	(var command (read_line))

	(var matched false)
	(if (== command COMMAND_ADD)
	  (add_element_command)
	  (set matched true))
	(if (== command COMMAND_REMOVE)
	  (remove_element_command)
	  (set matched true))
	(if (== command COMMAND_PRINT)
	  (print_command)
	  (set matched true))
  (if (== command COMMAND_HELP)
	  (help_command)
	  (set matched true))
  (if (== command COMMAND_EXIT)
	  (set looping false)
	  (set matched true))

	(if (! matched)
	  (println "ERROR unknown command: " command)
	  (help_command))

	/* loop ! */)

