(type Result y z)

(defun outer ()
	(var y 0)
	(defun middle ()
		(var z 0)
		(defun inner ()
			(set y (+ y 1))
			(set z (+ z 1))
			(new Result y z)
		)
		inner
	)
	middle
)

(var middle1 (outer))
(var inner1 (middle1))
(var inner2 (middle1))
(var result1 (inner1)) // Result 1 1
(var result2 (inner2)) // Result 2 1

/*
(defun outer_function (some_value)
  (defun inner_function () some_value)
  inner_function)

(var captured_function (outer_function 42))
(println "Value is: " (captured_function))

(defun make_closure (outer_parameter_a outer_parameter_b)
	(var some_local_a "some-local-value-a")
	(var some_local_b "some-local-value-b")
	(defun some_closure (inner_parameter_a inner_parameter_b)
		(println "Inner: " inner_parameter_a " " inner_parameter_b ", Outer parameter: " outer_parameter_a " " outer_parameter_b ", Some local: " some_local_a " " some_local_b)))

(var closure (make_closure "outer-parameter-value-1" "outer-parameter-value-2"))
(closure "inner-parameter-value-1" "inner-parameter-value-2")
*/

